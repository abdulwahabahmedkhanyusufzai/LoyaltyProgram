{% schema %}
{
  "name": "Star Rating",
  "target": "body",
  "settings": [
    { "type": "product", "id": "product", "label": "product", "autofill": true },
    { "type": "color", "id": "colour", "label": "Star Colour", "default": "#ff0000" }
  ]
}
{% endschema %}

      <div class="corner_style">
      <div class="corner-books">
      <div class="corner-text">
      <p>Silver</p>
      <p>Gold</p>
      </div>
      <div class="corner-block">
      <div class="progress progress--large" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="60" style="--value:60%;">
      <div class="progress__track">
        <div class="progress__fill" aria-hidden="true"></div>
      </div>
      <div class="progress__meta"></div>
    </div>
    </div>
    <p class="progress_about">Earn 250 more points to reach Gold</p>
    </div>  
     <div class="banner_point_info">
    <p class="banner_point">(55)</p>
    <p>Points Balance</p>  
    </div>
    
    <div class="banner_point_info">
    <p class="banner_point">(15 Aug)</p>
    <p>20 Point Expiry</p>  
    </div>
    
    </div>
    <div class="banner__box content-container content-container--full-width-mobile color-{{ section.settings.color_scheme }} gradient">
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when 'heading' -%}
            <h2
              class="banner__heading inline-richtext {{ block.settings.heading_size }}"
              {{ block.shopify_attributes }}
            >
              Welcome to Our Loyalty Programme
            </h2>
            <p
              class="banner__subheading inline-richtext "
              {{ block.shopify_attributes }}
            >
              A promise of a new journey where softness unfolds into infinity
            </p>
          {%- when 'text' -%}
            <div class="banner__text rte {{ block.settings.text_style }}" {{ block.shopify_attributes }}>
              <p>{{ block.settings.text }}</p>
            </div>
          {%- when 'buttons' -%}

            {% case block.settings.button_rounded_corners %}
              {% when 'low' %}
                {% assign rounded_class = 'pp-rounded-2xl' %}
              {% when 'medium' %}
                {% assign rounded_class = 'pp-rounded-3xl' %}
              {% when 'high' %}
                {% assign rounded_class = 'pp-rounded-full' %}
            {% endcase %}

            <div
              class="banner__buttons{% if block.settings.button_label_1 != blank and block.settings.button_label_2 != blank %} banner__buttons--multiple{% endif %}"
              {{ block.shopify_attributes }}
            >
              {%- if block.settings.button_label_1 != blank -%}
                <a
                  {% if block.settings.button_link_1 == blank %}
                    role="link" aria-disabled="true"
                  {% else %}
                    href="{{ block.settings.button_link_1 }}"
                  {% endif %}
                  class="button remove-content {{ rounded_class }}"
                  style="padding-top: {{ block.settings.button_padding_vertical }}px; padding-bottom: {{ block.settings.button_padding_vertical }}px; color: {{ block.settings.button_text_color }}; background-color: {{ block.settings.button_background_color }};"
                >
                  {{- block.settings.button_label_1 | escape -}}
                </a>
              {%- endif -%}
              {%- if block.settings.button_label_2 != blank -%}
                <a
                  {% if block.settings.button_link_2 == blank %}
                    role="link" aria-disabled="true"
                  {% else %}
                    href="{{ block.settings.button_link_2 }}"
                  {% endif %}
                  class="button remove-content {{ rounded_class }}"
                  style="padding-top: {{ block.settings.button_padding_vertical }}px; padding-bottom: {{ block.settings.button_padding_vertical }}px; color: {{ block.settings.button_text_color }}; background-color: {{ block.settings.button_background_color }};"
                >
                  {{- block.settings.button_label_2 | escape -}}
                </a>
              {%- endif -%}
            </div>
        {%- endcase -%}
      {%- endfor -%}
    </div>
<script>
document.addEventListener("DOMContentLoaded", async () => {
  // --- FETCH & RENDER OFFERS ---
  
  console.log(product);
  const offersContainer = document.querySelector(".loyal-1");
  if (offersContainer) {
    const staticCards = offersContainer.querySelectorAll(".offer-card, .seprator");
    staticCards.forEach((el) => el.remove());

    const loadingText = document.createElement("p");
    loadingText.textContent = "Loading offers...";
    loadingText.style.cssText =
      "color:#555;margin:20px 0;text-align:center;font-size:16px;";
    offersContainer.appendChild(loadingText);

    try {
      const response = await fetch("https://loyaltyprogramwaro-production.up.railway.app/api/offers");
      if (!response.ok) throw new Error("Failed to fetch");

      const data = await response.json();
      const offers = data.offers; // ✅ FIX — extract the array

      loadingText.remove();

      if (!Array.isArray(offers) || offers.length === 0) {
        const emptyMsg = document.createElement("p");
        emptyMsg.textContent = "No active offers available right now. Please check back later.";
        emptyMsg.style.cssText = "color:#777;text-align:center;font-size:15px;";
        offersContainer.appendChild(emptyMsg);
      } else {
        offers.forEach((offer, index) => {
          const offerCard = document.createElement("div");
          offerCard.className = "offer-card";
          offerCard.innerHTML = `
            <img
              src="https://loyaltyprogramwaro-production.up.railway.app/${offer.image || 'https://cdn.shopify.com/s/files/1/0921/8428/1416/files/default-offer.jpg'}"
              alt="${offer.name || 'Offer'}"
              style="width:60px;height:60px;border-radius:50%;object-fit:cover;"
            />
            <div class="offer-text">
              <strong>${offer.name || 'Special Offer'}</strong>
              <p>${offer.description || 'Enjoy exclusive rewards on your next order.'}</p>
            </div>
            <button class="offer-btn">${offer.buttonLabel || 'Shop Now'}</button>
          `;
          offersContainer.appendChild(offerCard);

          if (index !== offers.length - 1) {
            const hr = document.createElement("hr");
            hr.className = "seprator";
            offersContainer.appendChild(hr);
          }
        });
      }
    } catch (err) {
      console.error("Error fetching offers:", err);
      loadingText.textContent = "Error loading offers. Please try again later.";
    }
  }

  // --- MOVE BANNER CORNER ---
  const upperBanner = document.querySelector(".content-for-layout ");
  const bannerCorner = document.querySelector(".corner_style");
  if (upperBanner && bannerCorner) {
    upperBanner.prepend(bannerCorner);
    console.log("✅ banner_corner moved inside upperBanner");
  } else {
    console.warn("⚠️ upperBanner or banner_corner not found.");
  }

  // --- INITIALIZE PRODUCT SCROLLS ---
  initProductScrolls();
});

// --- DRAGGABLE PRODUCT SCROLL FUNCTION ---
function initProductScrolls() {
  const containers = document.querySelectorAll(".product-scroll");
  if (!containers.length) return;

  containers.forEach((container) => {
    if (container.__dragInit) return;
    container.__dragInit = true;

    container.classList.add("product-scroll-init");
    let isDragging = false;
    let startX = 0;
    let startScroll = 0;

    container.addEventListener("pointerdown", (e) => {
      if (e.button && e.button !== 0) return;
      isDragging = true;
      container.classList.add("is-dragging");
      startX = e.clientX;
      startScroll = container.scrollLeft;
      container.setPointerCapture(e.pointerId);
      document.documentElement.style.userSelect = "none";
    });

    container.addEventListener("pointermove", (e) => {
      if (!isDragging) return;
      const dx = e.clientX - startX;
      container.scrollLeft = startScroll - dx * 1.2;
    });

    const stopDrag = (e) => {
      if (!isDragging) return;
      isDragging = false;
      container.classList.remove("is-dragging");
      try {
        container.releasePointerCapture && container.releasePointerCapture(e && e.pointerId);
      } catch {}
      document.documentElement.style.userSelect = "";
    };

    container.addEventListener("pointerup", stopDrag);
    container.addEventListener("pointercancel", stopDrag);
    container.addEventListener("pointerleave", stopDrag);

    container.addEventListener(
      "wheel",
      (e) => {
        if (Math.abs(e.deltaX) > 0.5) return;
        if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {
          container.scrollLeft += e.deltaY;
          e.preventDefault();
        }
      },
      { passive: false }
    );

    container.setAttribute("tabindex", "0");
    container.addEventListener("keydown", (e) => {
      if (e.key === "ArrowRight") container.scrollLeft += 160;
      if (e.key === "ArrowLeft") container.scrollLeft -= 160;
    });

    const imgs = container.querySelectorAll("img");
    imgs.forEach((img) => {
      img.style.touchAction = "none";
    });
  });
}
</script>
